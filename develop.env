## Settings below pin container image versions and _can_ be changed for version updates

DOCKER_IMAGE=ghcr.io/internetstandards/internet.nl:develop
DOCKER_IMAGE_UNBOUND=ghcr.io/internetstandards/internet.nl:unbound
DOCKER_IMAGE_WEBSERVER=ghcr.io/internetstandards/internet.nl:webserver
DOCKER_IMAGE_REDIS=redis:alpine
DOCKER_IMAGE_RABBITMQ=rabbitmq:management-alpine
DOCKER_IMAGE_POSTGRES=postgres:alpine
DOCKER_IMAGE_ROUTINATOR=nlnetlabs/routinator
DOCKER_IMAGE_TEST_RUNNER=ghcr.io/internetstandards/internet.nl:test-runner

## Settings below _must_ be changed on a per host/installation basis

# domain name the application is hosted on
INTERNETNL_DOMAINNAME=internet.nl
# Docker Compose project name to use in case of multiple instances running on the same host
COMPOSE_PROJECT_NAME=internetnl

SECRET_KEY=not-so-secret

# enable batch API
ENABLE_BATCH=True

# public interface is given a subnet of the IPv6 subnet assigned to the host itself
IPV6_SUBNET_PUBLIC=fd00:42:1::/48
# the docker interface IP is set as gateway
IPV6_GATEWAY_PUBLIC=fd00:42:1::1
# public IPv6 addresss set for INTERNETNL_DOMAINNAME, must be within IPV6_SUBNET_PUBLIC subnet, is
# set on webserver service public interface
IPV6_IP_PUBLIC=fd00:42:1::100
# public IPv4 addresss set for INTERNETNL_DOMAINNAME, is used by unbound, is not set on any service
# interface, should be set on host public interface (eg: eth0)
IPV4_IP_PUBLIC=172.42.0.100
# public IPv6 address for unbound DNS resolver, must be within IPV6_SUBNET_PUBLIC subnet, should
# be assigned to the test-ns-signed and test-ns6-signed zones, is set on unbound service public interface
IPV6_UNBOUND_IP_PUBLIC=fd00:42:1::101

# IPv4 subnet assigned to public-internet network
IPV4_SUBNET_PUBLIC=172.42.0.0/16

IPV4_WEBSERVER_IP_PUBLIC=172.42.0.100
IPV4_UNBOUND_IP_PUBLIC=172.42.0.101

# use fixed IPv4 addresses for internal networking to prevent resolving cache issues when recreating containers
IPV4_SUBNET_INTERNAL=192.168.42.0/24
IPV4_IP_WEBSERVER_INTERNAL=192.168.42.102
IPV4_IP_APP_INTERNAL=192.168.42.103
IPV4_IP_UNBOUND_INTERNAL=192.168.42.104
IPV4_IP_ROUTINATOR_INTERNAL=192.168.42.105
IPV4_IP_STATSD_INTERNAL=192.168.42.106
IPV4_IP_RESOLVER_INTERNAL=192.168.42.50

# enable debug logging
DEBUG=True
INTERNETNL_LOG_LEVEL=DEBUG

## Settings below _may_ be changed

# enable/disable specific checks
INTERNET_NL_CHECK_SUPPORT_IPV6=True
INTERNET_NL_CHECK_SUPPORT_DNSSEC=True
INTERNET_NL_CHECK_SUPPORT_MAIL=True
INTERNET_NL_CHECK_SUPPORT_TLS=True
INTERNET_NL_CHECK_SUPPORT_APPSECPRIV=True
INTERNET_NL_CHECK_SUPPORT_RPKI=True

INTERNETNL_CACHE_RESET_ALLOWLIST=target.test

# disable tracking
MATOMO_URL=
MATOMO_SITEID=

## Settings below _may_ be changed but are best _left_ as is

# postgres DB settings
POSTGRES_USER=internetnl
POSTGRES_PASSWORD=password
POSTGRES_DB=internetnl_db1

# allow localhost for healthchecks, the public domain for the app and it's subdomains for connection tests
ALLOWED_HOSTS=127.0.0.1,::1,localhost,.internet.nl,internet.nl,host.docker.internal
CSP_DEFAULT_SRC="'self',*.internet.nl"

IPV6_TEST_ADDR=fd00:42:1::100
CONN_TEST_DOMAIN=internet.nl
SMTP_EHLO_DOMAIN=internet.nl

# to low of an interval burdens the services, to high causes slow compose up/restarts
HEALTHCHECK_INTERVAL=5s

## Settings below are environment specific and _must not_ be changed
COMPOSE_FILE=docker/docker-compose.yml:docker/docker-compose-resolver.yml:docker/docker-compose-monitoring.yml

# expose the webserver http port to localhost:8080, expose unbound to random ports
WEBSERVER_PORT=8080:80
WEBSERVER_PORT_TLS=443:443
UNBOUND_PORT_TCP=53/tcp
UNBOUND_PORT_UDP=53/udp
# don't export rabbitmq GUI
RABBITMQ_GUI=127.0.0.1:15672:15672

# use default public url
PUBLIC_SUFFIX_LIST_URL=

INTEGRATION_TESTS=False
