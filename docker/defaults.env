# This file contains all default settings for the Internet.nl Docker application stack.
# Please _DO NOT_ modify this file to change the runtime settings of your instance. Instead
# use one of the files that is layered on top of this, eg: `host.env` or `local.env`.

# Most of the variables in this file are safe to overwrite. Variables at the top are the ones you most likely want to customize, those at the bottom are better left alone unless you know what you are doing.

# domain name the application is hosted on
INTERNETNL_DOMAINNAME=

# see: documentation/Docker-deployment.yml for information about the network settings
# public IPv4 addresss set for INTERNETNL_DOMAINNAME
IPV4_IP_PUBLIC=172.42.0.100
# public IPv6 addresss set for INTERNETNL_DOMAINNAME
IPV6_IP_PUBLIC=fd00:42:1::100

# IPv6 address and domain used for the "Test your connection" test
IPV6_TEST_ADDR=fd00:42:1::100
# should be the domain under which the *.test-ns(6)?-signed zone is delegated
CONN_TEST_DOMAIN=

# EHLO domain used in the "Test your email" test
SMTP_EHLO_DOMAIN=internet.nl

# use letsencrypt staging server, set to 0 for production environments
LETSENCRYPT_STAGING=0
# email address to use for letsencrypt contact
LETSENCRYPT_EMAIL=

# Settings for Matomo analytics
# These may be configured to make use of your own Matomo instance for web analytic
MATOMO_URL=
MATOMO_SITEID=

# set DSN and environment for Sentry events
SENTRY_DSN=
SENTRY_ENVIRONMENT=unknown

# enable batch API
ENABLE_BATCH=False

# enable hall of fame
ENABLE_HOF=True

# comma separated user:password pairs for Batch API authentication
# eg: BATCH_AUTH=user1:welkom01,user2:hunter2
BATCH_AUTH=
BATCH_USER_DEFAULT_ORGANISATION=n/a
BATCH_USER_DEFAULT_EMAIL_DOMAIN=example.com
# comma separated user:password pairs for /grafana and /prometheus metrics endpoints
MONITORING_AUTH=
# comma separated user:password pairs for side wide authentication
BASIC_AUTH=

# comma separated of IP(v6) addresses/subnets that are allowed to access the website without a password when BASIC_AUTH is enabled
ALLOW_LIST=

# comma separated user:htpasswd_encrypted pairs, same AUTH above, except password must already be encrypted
# please not that the value needs to be enclosed by single quotes to prevent interpolation of the dollar signs
# eg: BATCH_AUTH='test1:$apr1$wGM8gxBe$DxGwifTGWZJ7nftK7LzFt/,user2:$apr1$BoZzsbb/$2NgfYCfF9lxmGrfSqsZKc/'
BATCH_AUTH_RAW=
MONITORING_AUTH_RAW=
BASIC_AUTH_RAW=

# Django debug mode, on test run without debug, same as production
DEBUG=False

# Enable debug log messages
# Set log level for various loggers
DJANGO_LOG_LEVEL=INFO
INTERNETNL_LOG_LEVEL=INFO
CELERY_LOG_LEVEL=ERROR
# Enable debug loglevel for other loggers
DEBUG_LOG=False
# Enable debug logging on internal Unbound library
DEBUG_LOG_UNBOUND=False

# maximum test duration and time before retest can be performed
INTERNETNL_CACHE_TTL=200

# enable/disable specific checks, only for batch API
INTERNET_NL_CHECK_SUPPORT_IPV6=True
INTERNET_NL_CHECK_SUPPORT_DNSSEC=True
INTERNET_NL_CHECK_SUPPORT_MAIL=True
INTERNET_NL_CHECK_SUPPORT_TLS=True
INTERNET_NL_CHECK_SUPPORT_APPSECPRIV=True
INTERNET_NL_CHECK_SUPPORT_RPKI=True

# list of domainnames that can have retry timer be reset via API
INTERNETNL_CACHE_RESET_ALLOWLIST=

## Settings below _may_ be changed but are best _left_ as is

# Docker Compose project name to use in case of multiple instances running on the same host
COMPOSE_PROJECT_NAME=internetnl

# configure which compose files are included in this environment
COMPOSE_FILE=docker/docker-compose.yml

# interval for batch processing, for test use lower value to speed up tests
BATCH_SCHEDULER_INTERVAL=20

# postgres DB settings
POSTGRES_USER=internetnl
POSTGRES_PASSWORD=password
POSTGRES_DB=internetnl_db1

# allow localhost for healthchecks, the public domain for the app and it's subdomains for connection tests
ALLOWED_HOSTS=127.0.0.1,::1,localhost,.internet.nl,internet.nl,host.docker.internal
CSP_DEFAULT_SRC="'self',*.internet.nl"

# to low of an interval burdens the services, to high causes slow compose up/restarts
HEALTHCHECK_INTERVAL=60s

# expose the webserver and unbound ports
WEBSERVER_PORT=80:80
WEBSERVER_PORT_TLS=443:443
UNBOUND_PORT_TCP=53:53/tcp
UNBOUND_PORT_UDP=53:53/udp
UNBOUND_PORT_IPV6_TCP=53:53/tcp
UNBOUND_PORT_IPV6_UDP=53:53/udp

# don't export rabbitmq GUI
RABBITMQ_GUI=127.0.0.1:15672:15672

# configure url to use for public suffix list, empty for default
PUBLIC_SUFFIX_LIST_URL=

# configure built-in unbound resolver to forward to integration test resolver for internal network
INTEGRATION_TESTS=False

# Amount of concurrent worker (green)threads
WORKER_CONCURRENCY=100

# Generate secret key instead of using specified one
GENERATE_SECRET_KEY=True
# Key used by Django for cryptographic signing, use unique key per instance, can be generated using:
# docker run -ti --rm --entrypoint python3 django -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=not-so-secret

# configuration application to use bundled routinator instance
ROUTINATOR_URL=http://192.168.42.105:9556/api/v1/validity

# IPv4 subnet assigned to public-internet network
IPV4_SUBNET_PUBLIC=172.42.0.0/16

IPV4_WEBSERVER_IP_PUBLIC=172.42.0.100
IPV4_UNBOUND_IP_PUBLIC=172.42.0.101

IPV4_IP_TEST_TARGET_PUBLIC=
IPV4_IP_TEST_TARGET_MAIL_PUBLIC=
TEST_TARGET_DOMAINNAME=

# set an explicit subnet for IPv6 as Docker does not pick one from a pool like it does with IPv4
IPV6_SUBNET_PUBLIC=fd00:42:1::/48
IPV6_GATEWAY_PUBLIC=fd00:42:1::1

IPV6_UNBOUND_IP_PUBLIC=fd00:42:1::101

IPV6_IP_TEST_TARGET_PUBLIC=
IPV6_IP_TEST_TARGET_MAIL_PUBLIC=

# use fixed IPv4 addresses for internal networking to prevent resolving cache issues when recreating containers
IPV4_SUBNET_INTERNAL=192.168.42.0/24
IPV4_IP_WEBSERVER_INTERNAL=192.168.42.102
IPV4_IP_APP_INTERNAL=192.168.42.103
IPV4_IP_UNBOUND_INTERNAL=192.168.42.104
IPV4_IP_ROUTINATOR_INTERNAL=192.168.42.105
IPV4_IP_STATSD_INTERNAL=192.168.42.106
IPV4_IP_POSTGRES_INTERNAL=192.168.42.107
IPV4_IP_REDIS_INTERNAL=192.168.42.108
IPV4_IP_RABBITMQ_INTERNAL=192.168.42.109
IPV4_IP_GRAFANA_INTERNAL=192.168.42.110
IPV4_IP_PROMETHEUS_INTERNAL=192.168.42.111
IPV4_IP_RESOLVER_INTERNAL_VALIDATING=192.168.42.112
IPV4_IP_RESOLVER_INTERNAL_PERMISSIVE=192.168.42.113
IPV4_IP_MOCK_RESOLVER_INTERNAL=192.168.42.114

