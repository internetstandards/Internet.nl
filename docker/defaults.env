# This file contains all default settings for the Internet.nl Docker application stack.
# Please _DO NOT_ modify this file to change the runtime settings of your instance. Instead
# use one of the files that is layered on top of this, eg: `host.env` or `local.env`.

# Most of the variables in this file are safe to overwrite. Variables at the top are the ones you most likely want to customize, those at the bottom are better left alone unless you know what you are doing.

# domain name the application is hosted on
INTERNETNL_DOMAINNAME=

# Git commit SHA or tag used as version to determine which containers and files to use in deployment
RELEASE=latest

# if configured will pull updates from this tag and automatically deploy them
AUTO_UPDATE_TO=

# Container images/versions to use for external containers
DOCKER_IMAGE_REDIS=redis:7.4.1-alpine
DOCKER_IMAGE_RABBITMQ=rabbitmq:3.13.7-management-alpine
DOCKER_IMAGE_POSTGRES=postgres:15.10-alpine
DOCKER_IMAGE_ROUTINATOR=nlnetlabs/routinator:v0.14.0
DOCKER_IMAGE_PROMETHEUS=prom/prometheus:v3.0.1
DOCKER_IMAGE_PROMETHEUS_ALERTMANAGER=prom/alertmanager:v0.27.0
DOCKER_IMAGE_POSTGRESQL_EXPORTER=prometheuscommunity/postgres-exporter:v0.16.0
DOCKER_IMAGE_REDIS_EXPORTER=oliver006/redis_exporter:v1.66.0
DOCKER_IMAGE_STATSD_EXPORTER=prom/statsd-exporter:v0.28.0
DOCKER_IMAGE_CELERY_EXPORTER=danihodovic/celery-exporter:0.10.14
DOCKER_IMAGE_NODE_EXPORTER=quay.io/prometheus/node-exporter:v1.8.2
DOCKER_IMAGE_DOCKER_STATSD_EXPORTER=aequitas/docker-stats-exporter:0.1.0
DOCKER_IMAGE_NGINX_LOGS_EXPORTER=ghcr.io/martin-helmich/prometheus-nginxlog-exporter/exporter:v1.11.0-amd64

# see: documentation/Docker-deployment.yml for information about the network settings
# public IPv4 addresss set for INTERNETNL_DOMAINNAME
IPV4_IP_PUBLIC=172.16.42.100
# public IPv6 addresss set for INTERNETNL_DOMAINNAME
IPV6_IP_PUBLIC=fd00:42:1::100

# IPv6 address and domain used for the "Test your connection" test
IPV6_TEST_ADDR=fd00:42:1::100
# should be the domain under which the *.test-ns(6)?-signed zone is delegated
CONN_TEST_DOMAIN=

# EHLO domain used in the "Test your email" test
SMTP_EHLO_DOMAIN=internet.nl

# used in User-Agent as contact hint for website administrators
# if not set it defaults to https://{INTERNETNL_DOMAINNAME}/
# USER_AGENT_URL=

# use letsencrypt staging server, set to 0 for production environments
LETSENCRYPT_STAGING=0
# email address to use for letsencrypt contact
LETSENCRYPT_EMAIL=

# specify ACME server
CERTBOT_SERVER=
# credentials for ACME with EAB
CERTBOT_EAB_KID=
CERTBOT_EAB_HMAC_KEY=

# list of comma separated domains that are also served but redirect to the primary domain name
REDIRECT_DOMAINS=

# Settings for Matomo analytics
# These may be configured to make use of your own Matomo instance for web analytic
MATOMO_URL=
MATOMO_SITEID=1
MATOMO_SUBDOMAIN_TRACKING=

# set DSN and environment for Sentry events
SENTRY_DSN=
SENTRY_ENVIRONMENT=unknown
SENTRY_SERVER_NAME=unknown

# enable batch API
ENABLE_BATCH=False

# enable hall of fame
ENABLE_HOF=True

# URL of yaml file with manual hosters Hall of Fame
HOSTERS_HOF_URL=
# manual HoF pages to include
MANUAL_HOF_PAGES=

# Enforce authentication on all URLs, rather than just batch API.
# Note that setting ALLOW
AUTH_ALL_URLS=False
# comma separated of IP(v6) addresses/subnets that are allowed to access the website without a password when AUTH_ALL_URLS is enabled
ALLOW_LIST=

# comma separated user:htpasswd_encrypted pairs for /grafana and /prometheus, and side wide
# password must already be encrypted
# please not that the value needs to be enclosed by single quotes to prevent interpolation of the dollar signs
# eg: MONITORING_AUTH_RAW='test1:$apr1$wGM8gxBe$DxGwifTGWZJ7nftK7LzFt/,user2:$apr1$BoZzsbb/$2NgfYCfF9lxmGrfSqsZKc/'
MONITORING_AUTH_RAW=

# Django debug mode, on test run without debug, same as production
DEBUG=False

# Enable debug log messages
# Set log level for various loggers
DJANGO_LOG_LEVEL=INFO
INTERNETNL_LOG_LEVEL=INFO
CELERY_LOG_LEVEL=ERROR
# Enable debug loglevel for other loggers
DEBUG_LOG=False
# Enable debug logging on internal Unbound library
DEBUG_LOG_UNBOUND=False

# maximum test duration and time before retest can be performed
INTERNETNL_CACHE_TTL=200

# enable/disable specific checks, only for batch API
INTERNET_NL_CHECK_SUPPORT_IPV6=True
INTERNET_NL_CHECK_SUPPORT_DNSSEC=True
INTERNET_NL_CHECK_SUPPORT_MAIL=True
INTERNET_NL_CHECK_SUPPORT_TLS=True
INTERNET_NL_CHECK_SUPPORT_APPSECPRIV=True
INTERNET_NL_CHECK_SUPPORT_RPKI=True

# list of domainnames that can have retry timer be reset via API
INTERNETNL_CACHE_RESET_ALLOWLIST=

# settings for alertmanager, enable it by adding 'alertmanager,monitoring,routinator' to COMPOSE_PROFILES in `docker/local.env`
# sending email address used for alerts
ALERTMANAGER_MAIL_FROM=

# SMTP configuration for sending emails
ALERTMANAGER_SMTP_HOST=
ALERTMANAGER_SMTP_USER=
ALERTMANAGER_SMTP_PASSWORD=
ALERTMANAGER_SMTP_PORT=587

# comma separated list of email addresses to send alert emails to
ALERTMANAGER_MAIL_TO=

# set subject for alert mails to be sent, see: https://prometheus.io/docs/alerting/latest/notifications/
ALERTMANAGER_SUBJECT=Alert on host '{{ .CommonAnnotations.host }}', caused by '{{ .CommonAnnotations.summary }}'

## Settings below _may_ be changed but are best _left_ as is

# Docker Compose project name to use in case of multiple instances running on the same host
COMPOSE_PROJECT_NAME=internetnl

# configure which compose files are included in this environment
COMPOSE_FILE=docker/compose.yaml

# where the configuration files for this installation/instance are located on the host system
INTERNETNL_INSTALL_BASE=/opt/Internet.nl

# enable routinator, this profile is omitted in develop.env because it is resource intensive for development environments
COMPOSE_PROFILES=monitoring,routinator

# interval for batch processing
BATCH_SCHEDULER_INTERVAL=1

# postgres DB settings
POSTGRES_USER=internetnl
POSTGRES_PASSWORD=password
POSTGRES_DB=internetnl_db1

# allow localhost for healthchecks, the public domain for the app and it's subdomains for connection tests
ALLOWED_HOSTS=127.0.0.1,::1,localhost,.internet.nl,internet.nl,host.docker.internal

# check health of containers every 5 minutes
HEALTHCHECK_INTERVAL=300s
# set a lower initial value so the environment is 'up' quicker
HEALTHCHECK_START_INTERVAL=5s

# expose the webserver and unbound ports
WEBSERVER_PORT=0.0.0.0:80:80
WEBSERVER_PORT_TLS=::0:443:443
WEBSERVER_PORT_IPV6=::0:80:80
WEBSERVER_PORT_IPV6_TLS=::0:443:443
UNBOUND_PORT_TCP=0.0.0.0:53:53/tcp
UNBOUND_PORT_UDP=0.0.0.0:53:53/udp
UNBOUND_PORT_IPV6_TCP=::0:53:53/tcp
UNBOUND_PORT_IPV6_UDP=::0:53:53/udp

# don't export rabbitmq GUI
RABBITMQ_GUI=127.0.0.1:15672:15672

# configure url to use for public suffix list, empty for default
PUBLIC_SUFFIX_LIST_URL=

# configure built-in unbound resolver to forward to integration test resolver for internal network
INTEGRATION_TESTS=False

# Default memory limit for containers
DEFAULT_MEMORY_LIMIT=1G

# Memory limit for containers with high memory usage
HIGH_MEMORY_LIMIT=5G

# Amount of concurrent worker (green)threads
WORKER_CONCURRENCY=500
# limit worker memory so it won't grow into swap
WORKER_MEMORY_LIMIT=1G
# amount of worker containers to start
WORKER_REPLICAS=2

# A seperate worker for the slow task queues runs at a lower concurrency and higher memory limit as
# otherwise these kind of tasks would cause OOM or other issues.
WORKER_SLOW_CONCURRENCY=2
WORKER_SLOW_MEMORY_LIMIT=5G
# limit number of slow worker replicas to 1 to prevent to much concurrent processes
WORKER_SLOW_REPLICAS=1

# Separate worker for tasks which suffer from a lot of memory leaks. This worker gets restarted at regular
# interval to mitigate the memory issues, it also gets a little more  memory allocated for that reason.
WORKER_NASSL_MEMORY_LIMIT=5G

# Generate secret key instead of using specified one
GENERATE_SECRET_KEY=True
# Key used by Django for cryptographic signing, use unique key per instance, can be generated using:
# docker run -ti --rm --entrypoint python3 django -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=not-so-secret

# configuration application to use bundled routinator instance
ROUTINATOR_URL=http://routinator:9556/api/v1/validity

# IPv4 subnet assigned to public-internet network
IPV4_SUBNET_PUBLIC=172.16.42.0/24

IPV4_SUBNET_INTERNAL=192.168.42.0/24

# set an explicit subnet for IPv6 as Docker does not pick one from a pool like it does with IPv4
IPV6_SUBNET_PUBLIC=fd00:42:1::/48
IPV6_GATEWAY_PUBLIC=fd00:42:1::1


LOGGING_DRIVER=journald

# enable daily or weekly database backups to volume
CRON_DAILY_POSTGRESQL_BACKUP=True
CRON_DAILY_TRUNCATE_EXPORTER_LOGS=True
CRON_WEEKLY_POSTGRESQL_BACKUP=False
CRON_DAILY_DELETE_BATCH_RESULTS=True
CRON_DAILY_DATABASE_CLEANUP=True
CRON_WORKER_RESTART=True

# enable running tests every 15 minutes for metrics collection
CRON_15MIN_RUN_TESTS=False
# domains to run periodic tests against, comma separated list of domain names, eg: example.nl,example.com
TEST_DOMAINS_SITE=
TEST_DOMAINS_MAIL=

# enables internet.nl specific content (eg: contact information, faq, security.txt), only enable for internet.nl
# instances. For customization see: documentation/Customize.md
INTERNETNL_BRANDING=False

# defines which languages are supported. DNS entries should be created for all languages in the list. The first
# language in the list is the default if no user preference is set. For valid language codes see this list:
# http://www.i18nguy.com/unicode/language-identifiers.html
# also see: documentation/Customize.md
LANGUAGES=en,nl

# enable caching, set to off to disable
NGINX_PROXY_CACHE=default_cache

# how long Django rendered pages are cached in Redis DB
PAGE_CACHE_TIME_SECONDS=300

# allows to disable autoreload in CI
INTERNETNL_AUTORELOAD=False

# set prometheus retention time and size
# https://prometheus.io/docs/prometheus/latest/storage/#operational-aspects
PROMETHEUS_RETENTION_TIME=5y
PROMETHEUS_RETENTION_SIZE=0
